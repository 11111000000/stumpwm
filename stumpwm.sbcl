#!/usr/bin/env sbcl

;; Here's a script that runs stumpwm using sbcl. You can put it in
;; your path and run it as a regular program. Make sure you have a
;; symlink of stumpwm.asd in your ~/.sbcl/systems/ directory or
;; another directory in asdf:*central-registry* so asdf can find
;; stumpwm.
;;
;; You'll also need to put this in your ~/.sbclrc file so sbcl handles
;; as a script properly:
;;
;; ;;; If the first user-processable command-line argument is a filename,
;; ;;; disable the debugger, load the file handling shebang-line and quit.
;; (let ((script (and (second *posix-argv*)
;; 		   (probe-file (second *posix-argv*)))))
;;   (when script
;;     ;; Handle shebang-line
;;     (set-dispatch-macro-character #\# #\!
;; 				  (lambda (stream char arg)
;; 				    (declare (ignore char arg))
;; 				    (read-line stream)))
;;     ;; Disable debugger
;;     (setf *invoke-debugger-hook*
;; 	  (lambda (condition hook)
;; 	    (declare (ignore hook))
;; 	    ;; Uncomment to get backtraces on errors
;; 	    ;; (sb-debug:backtrace 20)
;; 	    (format *error-output* "Error: ~A~%" condition)
;; 	    (quit)))
;;     (load script)
;;     (quit)))
;;
;; If you want stumpwm to load on a specific display use the DISPLAY
;; environment variable.

(require 'asdf)
(require 'stumpwm)
(stumpwm:stumpwm)
